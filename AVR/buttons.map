Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
                              buttons.o (__divmodsi4)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_prologue.o)
                              buttons.o (__prologue_saves__)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_epilogue.o)
                              buttons.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
                              buttons.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
                              buttons.o (__do_clear_bss)
/usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
LOAD buttons.o
LOAD /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x608
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e      0x4c0 buttons.o
                0x000000fe                __vector_6
                0x00000420                read_and_display
                0x00000232                read_buttons
                0x00000088                read
                0x0000005e                delay_short
                0x00000444                main
                0x000001ae                display_digits
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_prologue.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_epilogue.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000051e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
                0x0000051e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000051e       0x36 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
                0x0000051e                __divmodsi4
 .text.libgcc   0x00000554       0x38 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_prologue.o)
                0x00000554                __prologue_saves__
 .text.libgcc   0x0000058c       0x36 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_epilogue.o)
                0x0000058c                __epilogue_restores__
 .text.libgcc   0x000005c2        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000005c2        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000005c2        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000005c2       0x44 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
                0x000005c2                __udivmodsi4
                0x00000606                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000606        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
                0x00000606                exit
                0x00000606                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000606        0x2 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000608                _etext = .

.data           0x00800060       0x20 load address 0x00000608
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x20 buttons.o
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_prologue.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_epilogue.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800080                . = ALIGN (0x2)
                0x00800080                _edata = .
                0x00800080                PROVIDE (__data_end, .)

.bss            0x00800080       0x1e load address 0x00000628
                0x00800080                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800080        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800080       0x1e buttons.o
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_prologue.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_epilogue.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_exit.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0080009e        0x0 /usr/lib/gcc/avr/4.2.2/avr4/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
                0x0080009e                PROVIDE (__bss_end, .)
                0x00000608                __data_load_start = LOADADDR (.data)
                0x00000628                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080009e        0x0
                0x0080009e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080009e                PROVIDE (__noinit_end, .)
                0x0080009e                _end = .
                0x0080009e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xc30
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o
 .stab          0x00000378      0x8b8 buttons.o
                                0x8c4 (size before relaxing)

.stabstr        0x00000000      0x899
 *(.stabstr)
 .stabstr       0x00000000      0x899 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(buttons.out elf32-avr)
LOAD linker stubs
